async asyncData({store, $api, params}) {
		let {campaign} = {}

		try {
			const {authToken} = this.token;
			const {slug} = params;
			const endPoint = `/fitur/campaign-management/${slug}`;

			console.log(authToken);

			$api.setHeader('Authorization', `Bearer ${authToken}`);
			$api.defaults.headers.common['Content-Type'] = 'application/json';
			$api.defaults.headers.common['Dku-Api-Key'] = process.env.NUXT_ENV_APP_TOKEN;
			const response = await $api.get(endPoint);

			campaign = response.data
		} catch(err) {
			console.error(err);
		}

		return {
			campaign
		}
	}



	try {
			const {authToken} = this.$data.myToken;
			const {slug} = params;
			const endPoint = `/fitur/campaign-management/${slug}`;

			console.log(authToken);


			$api.setHeader('Authorization', `Bearer ${authToken}`);
			$api.defaults.headers.common['Content-Type'] = 'application/json';
			$api.defaults.headers.common['Dku-Api-Key'] = process.env.NUXT_ENV_APP_TOKEN;
			const response = await $api.get(endPoint);
			const data = response.data;

			return {
				myData: data,
			};
		} catch(err) {
			console.error(err);
			return {
				myData: null,
			};
		}





		if(data?.is_login && data?.data?.logins) {
              this.errorLogin = data.message;
              this.errorUsers = true;
              this.error = true;
              this.form = {};
              // const roles = this.getRoles(data?.data?.roles[0].name);
              // const prepareLogin = data?.data?.logins;
              // const authToken = prepareLogin[0];
              // const savings = [
              //   {
              //     expires_at: data?.data?.expires_at,
              //     remember_token: data?.data?.remember_token
              //   }
              // ];

              // this.$swal({
              //   title: data.message,
              //   text: data.quote,
              //   icon: 'warning',
              //   showCancelButton: true,
              //   confirmButtonColor: '#3085d6',
              //   cancelButtonColor: '#d33',
              //   confirmButtonText: 'Force Logout!'
              // }).then((result) => {
              //   if (result.isConfirmed) {
              //     this.errorLogin = ''
              //     this.errorUsers = false;
              //     this.error = false;
              //     this.form = {};
              //     this.forceLogout(authToken);
              //   }
              // })
            }